services:
  app:
    container_name: golang-crud-clean-arch-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "9000:9000"
    env_file:
      - .env
    depends_on:
      - mongo
      - redis
      - postgres
      - kafka
    restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: golang-cleanarch-postgres
    environment:
      POSTGRES_DB: gotrial
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: kakashik1
    ports:
      - "5435:5432"
    volumes:
      - ./dbmigration/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
      - ./dbmigration/seed_data.sql:/docker-entrypoint-initdb.d/seed_data.sql
    restart: unless-stopped

  mongo:
    image: mongo:6.0
    container_name: golang-cleanarch-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: golang-cleanarch-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  jaeger:
    image: jaegertracing/all-in-one:1.51
    container_name: golang-cleanarch-jaeger
    ports:
      - "16686:16686"   # UI http://localhost:16686
      - "14268:14268"   # Collector (for traces)
    restart: unless-stopped

  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: golang-cleanarch-zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    restart: unless-stopped

  kafka:
    image: bitnami/kafka:3.5
    container_name: golang-cleanarch-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_LISTENERS: PLAINTEXT://0.0.0.0:9092
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      - zookeeper
    restart: unless-stopped

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: golang-cleanarch-kafdrop
    ports:
      - "9001:9000"  # Akses UI di http://localhost:9001
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
    depends_on:
      - kafka
    restart: unless-stopped

volumes:
  mongo_data:
  redis_data:
  postgres_data:
